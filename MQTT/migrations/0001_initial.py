# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-01-02 01:51
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarbonDioxideData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='感測器名稱')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('concentration', models.FloatField(verbose_name='濃度(ppm)')),
            ],
            options={
                'ordering': ['sensor_id', 'date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='感測器名稱')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('temperature', models.FloatField(verbose_name='攝氏溫度(°C)')),
                ('humidity', models.FloatField(verbose_name='濕度(%)')),
                ('HeatIndex', models.FloatField(verbose_name='熱指數')),
            ],
            options={
                'ordering': ['sensor_id', 'date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='ParticleMatterData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='感測器名稱')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('pm010_TSI', models.FloatField(verbose_name='標準顆粒 PM 1 濃度(ug/m3)')),
                ('pm025_TSI', models.FloatField(verbose_name='標準顆粒 PM 2.5 濃度(ug/m3)')),
                ('pm100_TSI', models.FloatField(verbose_name='標準顆粒 PM 10 濃度(ug/m3)')),
                ('pm010_ATM', models.FloatField(verbose_name='大氣環境 PM 1 濃度(ug/m3)')),
                ('pm025_ATM', models.FloatField(verbose_name='大氣環境 PM 2.5 濃度(ug/m3)')),
                ('pm100_ATM', models.FloatField(verbose_name='大氣環境 PM 10 濃度(ug/m3)')),
            ],
            options={
                'ordering': ['sensor_id', 'date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='ParticleNumberData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='感測器名稱')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('Diameter_003', models.FloatField(verbose_name='粒徑 0.3μm(count)')),
                ('Diameter_005', models.FloatField(verbose_name='粒徑 0.5μm(count)')),
                ('Diameter_010', models.FloatField(verbose_name='粒徑 0.1μm(count)')),
                ('Diameter_025', models.FloatField(verbose_name='粒徑 2.5μm(count)')),
                ('Diameter_050', models.FloatField(verbose_name='粒徑 5.0μm(count)')),
                ('Diameter_100', models.FloatField(verbose_name='粒徑10.0μm(count)')),
            ],
            options={
                'ordering': ['sensor_id', 'date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=50, unique=True, verbose_name='測點編號')),
                ('name', models.CharField(max_length=50, verbose_name='測點名稱')),
                ('location', models.CharField(max_length=100, verbose_name='測點位置')),
                ('type', models.CharField(max_length=50, verbose_name='感測器類型')),
                ('SensorPM', models.CharField(max_length=50, verbose_name='懸浮微粒感測器型號')),
                ('SensorEnv', models.CharField(max_length=50, verbose_name='溫溼度感測器型號')),
                ('SensorCO2', models.CharField(max_length=50, verbose_name='二氧化碳感測器型號')),
                ('online', models.BooleanField()),
            ],
            options={
                'ordering': ['sensor_id', 'name', 'type', 'location'],
            },
        ),
        migrations.AddField(
            model_name='particlenumberdata',
            name='sensor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MQTT.Sensor'),
        ),
        migrations.AddField(
            model_name='particlematterdata',
            name='sensor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MQTT.Sensor'),
        ),
        migrations.AddField(
            model_name='environmentdata',
            name='sensor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MQTT.Sensor'),
        ),
        migrations.AddField(
            model_name='carbondioxidedata',
            name='sensor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MQTT.Sensor'),
        ),
    ]
